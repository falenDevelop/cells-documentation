// services-data-list.js - Solo los datos de servicios

window.SERVICES_DATA = [
  {
    id: 'configuraci-n-de-npm-1760295775209',
    title: 'CONFIGURACIÓN DE NPM',
    description: 'AMBIENTACION DE CELL PARA WINDOWS Y MAC',
    icon: 'home-outline',
    linkIcon: 'arrow-forward-outline',
    category: 'ambientacion',
    content:
      '<p><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Artifactory nos proporciona soporte completo para la gestión de paquetes npm y garantiza un acceso óptimo y confiable a </span><strong style="background-color: transparent; color: rgb(25, 115, 184);"><a href="https://npmjs.org/" rel="noopener noreferrer" target="_blank">npmjs.org</a></strong><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);"> . Al agrupar varios registros npm en un repositorio virtual, Artifactory proporciona acceso a todos sus paquetes npm a través de una única URL para carga y descarga.</span></p><p><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Entonces necesitamos configurar nuestro registro npm privado asignado en Artifactory.</span></p><h2><span style="background-color: rgb(255, 255, 255); color: rgb(18, 18, 18);">"Prepárame" de Artifactory</span></h2><ol><li data-list="ordered"><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Vaya a </span><strong style="background-color: transparent; color: rgb(25, 115, 184);"><a href="https://artifactory.globaldevtools.bbva.com/" rel="noopener noreferrer" target="_blank">https://artifactory.globaldevtools.bbva.com/</a></strong><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);"> .</span></li><li data-list="ordered"><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Abra el menú de perfil haciendo clic en el icono en la esquina superior derecha.</span></li><li data-list="ordered"><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Haga clic en Configurarme.</span></li><li data-list="ordered"><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Elija npm.</span></li><li data-list="ordered"><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Busque gl-bbva-npm-virtual en el selector de repositorio.</span></li><li data-list="ordered"><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Haga clic en "Generar token y crear instrucciones".</span></li><li data-list="ordered"><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Desplácese hacia abajo hasta "Editar .npmrc (sin ámbito)" y haga clic en copiar.</span></li><li data-list="ordered"><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Abra su .npmrc global y pegue la configuración.</span></li></ol><h2><span style="background-color: rgb(255, 255, 255); color: rgb(18, 18, 18);">Configuración manual (no recomendada)</span></h2><h3><span style="background-color: rgb(255, 255, 255); color: rgb(18, 18, 18);">Windows con plataforma</span></h3><p>\t\t<span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Abra la terminal </span><strong style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Git Bash</strong><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);"> y ejecute (</span><em style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">NOTA:</em><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);"> Si ya tiene un archivo .npmrc, haga una copia de seguridad de su .npmrc actual y elimínelo.)</span></p><pre><code class="language-plain">asdasda\ndasdasdas\ndasdasd\nadasdas\ndasd\nnpm config set registry https://artifactory.globaldevtools.bbva.com:443/artifactory/api/npm/gl-bbva-npm-virtual\n\ncurl -x &lt;PROXY&gt; -u &lt;USER&gt;:&lt;IDENTITY_TOKEN&gt; "https://artifactory.globaldevtools.bbva.com:443/artifactory/api/npm/auth" --insecure &gt;&gt; ~/.npmrc</code></pre><ol><li data-list="bullet"><strong style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">&lt;PROXY&gt;</strong><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);"> es la URL de su país/región que puede obtener de la siguiente tabla.</span></li><li data-list="bullet"><strong style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">&lt;USER&gt;</strong><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);"> es el </span><code style="background-color: rgb(233, 233, 233); color: rgb(34, 34, 34);">User Profile</code><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">que aparece en </span><strong style="background-color: transparent; color: rgb(25, 115, 184);"><a href="https://artifactory.globaldevtools.bbva.com/ui/user_profile" rel="noopener noreferrer" target="_blank">https://artifactory.globaldevtools.bbva.com/ui/user_profile</a></strong></li><li data-list="bullet"><strong style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">&lt;IDENTITY_TOKEN&gt;</strong><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);"> Vaya a </span><strong style="background-color: transparent; color: rgb(25, 115, 184);"><a href="https://artifactory.globaldevtools.bbva.com/ui/user_profile" rel="noopener noreferrer" target="_blank">https://artifactory.globaldevtools.bbva.com/ui/user_profile</a></strong><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);"> y generalo haciendo clic en el botón "Generar un token de identidad".</span></li></ol><p>\t<span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Después de realizar el paso anterior, debería tener un archivo .npmrc similar a este:</span></p><p class="ql-indent-1"><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">Nota: Si ve una línea como " </span><code style="color: rgb(34, 34, 34);">_auth = &lt;IDENTITY_TOKEN&gt;</code><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);">en lugar de </span><code style="background-color: rgb(233, 233, 233); color: rgb(34, 34, 34);">//artifactory.globaldevtools.bbva.com/artifactory/api/npm/:_auth=&lt;generated auth key&gt;</code><span style="background-color: rgb(255, 255, 255); color: rgb(34, 34, 34);"> "</span></p>',
    createdAt: '2025-10-12T19:02:55.209Z',
  },
  {
    id: 'orden-de-importanciones-1760317071502',
    title: 'ORDEN DE IMPORTANCIONES',
    description: 'Para las importaciones de los features es importantes el orden en la cual esta impotandolos',
    icon: 'document-text-outline',
    linkIcon: 'arrow-forward-outline',
    category: 'estandares',
    content:
      "<p>Esta es una referencia de las importaciones la cual debemos llevar para un buen orden </p><pre><code class=\"language-plain\">// LIT ELEMENT\nimport { LitElement, html, nothing } from 'lit';\n\n// SETCOMPONENTSHAREDSTYLES\nimport { setComponentSharedStyles } from '@bbva-web-components/bbva-core-lit-helpers';\n\n// DIRECTIVAS\nimport { repeat } from 'lit/directives/repeat.js';\n\n// SET COMPONET SHARED STYELS\nimport { setComponentSharedStyles } from '@bbva-web-components/bbva-core-lit-helpers';\n\n// MIXINS\nimport { BbvaWidgetConfigurationMixin } from '@bbva-spherica-components/bbva-widget-configuration-mixin';\nimport { BbvaWidgetDefaultsMixin } from '@bbva-spherica-components/bbva-widget-defaults-mixin';\n\n// BASICO\nimport { BbvaHelpModal } from '@bbva-spherica-components/bbva-help-modal/index.js';\n\n//DM\nimport { BbvaFeatureCardBalanceLimitUpdatePeDM } from './BbvaFeatureCardBalanceLimitUpdatePeDm.js';\n\n// ICONS\nimport { sphericaWarning } from '@bbva-web-components/bbva-foundations-icons';\n\n// CUSTOM ELEMENS\nimport { AboutInfoPage, AboutPage } from './pages/index.js';\n\n// CONSTS, UTILS\nimport {\n  SECTIONS,\n  NA_VALUE,\n  GMS_VALUE,\n  DEFAULT_OPTIONS_LIST,\n  MOBILE_SERVICES_MAP\n} from './utils/constants.js';\n\n//STYLES\nimport styles from './bbva-feature-about-pe.css.js';</code></pre>",
    createdAt: '2025-10-13T00:57:51.502Z',
  },
  {
    id: 'documentacion-jsdoc-de-la-clase-principal-1761455348732',
    title: 'DOCUMENTACION JSDOC DE LA CLASE PRINCIPAL',
    description: 'A continuación se presenta la estructura de documentación que debe replicarse en cada componente',
    icon: 'card-outline',
    linkIcon: 'arrow-forward-outline',
    category: 'estandares',
    content:
      '<p>Esta sección establece el estándar de documentación que debe implementarse en todos los componentes del proyecto. La estructura propuesta utiliza <strong>JSDoc</strong> para garantizar que cada componente esté correctamente documentado, facilitando su comprensión, mantenimiento y reutilización por parte del equipo de desarrollo.</p><p>El objetivo es proporcionar una documentación clara y consistente que incluya:</p><ol><li data-list="bullet"><strong>Descripción funcional</strong>: Explicación del propósito y responsabilidades del componente</li><li data-list="bullet"><strong>Badge identificador</strong>: Indicador visual del tipo de tecnología utilizada (LitElement, React, etc.)</li><li data-list="bullet"><strong>Ejemplo de uso</strong>: Código de implementación básico para facilitar la integración</li><li data-list="bullet"><strong>Metadata del componente</strong>: Información sobre custom elements, mixins aplicados y eventos emitidos</li><li data-list="bullet"><strong>Parámetros y propiedades</strong>: Detalle de las props/atributos disponibles</li><li data-list="bullet"><strong>Eventos</strong>: Listado completo de eventos que el componente puede disparar</li></ol><pre><code class="language-plain">/**\n * ![LitElement component](https://img.shields.io/badge/LitElement-component-blue.svg)\n *\n * This component manages the display of application information, including versions,\n * device configuration, mobile services, and navigation options. It provides functionality\n * to display terms and conditions and handles loading states.\n *\n * Example:\n *\n * ```html\n *   &lt;bbva-feature-about-pe\n *      device-info-model="iPhone"\n *      device-info-platform="iOS"\n *      app-version="1.0.0"\n *   &gt;&lt;/bbva-feature-about-pe&gt;\n * ```\n *\n * @customElement bbva-feature-about-pe\n * @LitElement\n * @appliesMixin BbvaWidgetConfigurationMixin\n * @appliesMixin BbvaWidgetDefaultsMixin\n * @fires {} bbva-feature-about-pe-back-click - Triggered when the back button is clicked.\n * @fires {qrData} bbva-feature-about-pe-terms-and-conditions-click - Triggered when terms and conditions option is clicked.\n * @fires {} about-page-about-info-click - Triggered when about info option is clicked.\n */</code></pre>',
    createdAt: '2025-10-26T05:09:08.732Z',
  },
  {
    id: 'uso-de-mixis-1761456161337',
    title: 'USO DE MIXIS',
    description: 'Esta sección describe los diferentes tipos de mixins disponibles y cómo implementarlos correctamente en las clases de componentes.',
    icon: 'shield-outline',
    linkIcon: 'arrow-forward-outline',
    category: 'estandares',
    content:
      '<p>Los mixins son un patrón de composición que permite extender la funcionalidad de los componentes de forma modular y reutilizable. Esta sección describe los diferentes tipos de mixins disponibles y cómo implementarlos correctamente en las clases de componentes.</p><p>Tipos de Mixins</p><p><strong>Caso 1: BbvaWidgetConfigurationMixin + BbvaWidgetDefaultsMixin</strong></p><p>Se utiliza para componentes tipo <strong>widget</strong> que requieren configuración avanzada y valores por defecto. Estos componentes deben incluir <code>${super.render()}</code> en su método <code>render()</code> para heredar la funcionalidad del mixin padre.</p><pre><code class="language-plain">export class BbvaFeatureAboutPe extends BbvaWidgetConfigurationMixin(\n  BbvaWidgetDefaultsMixin(LitElement)\n) {\n  // Implementación del componente\n}</code></pre><p><strong>Características:</strong></p><ol><li data-list="bullet">Proporciona gestión de configuración y valores predeterminados</li><li data-list="bullet">Requiere el uso de <code>super.render()</code> en el template</li><li data-list="bullet">Utiliza <code>configurationScopedElements()</code> para elementos con configuración</li></ol><p><strong>Configuración Obligatoria en el Constructor</strong></p><p>Cuando se utiliza <code>BbvaWidgetConfigurationMixin</code>, es <strong>obligatorio</strong> declarar el objeto <code>config</code> en el constructor para activar o desactivar las funcionalidades del widget. Por defecto, todas las opciones están en <code>false</code>:</p><pre><code class="language-plain">constructor() {\n  super();\n  this.config = {\n    header: false,           // Activar/desactivar header del widget\n    fixedHeader: false,      // Header fijo al hacer scroll\n    loader: false,           // Indicador de carga global\n    notify: false,           // Sistema de notificaciones\n    notifyTop: false,        // Notificaciones en la parte superior\n    notifyFeature: false,    // Notificaciones específicas de feature\n    smartAssistant: false,   // Asistente inteligente\n    faqs: false,            // Sección de preguntas frecuentes\n  };\n}</code></pre><p>Ejemplo de uso activando funcionalidades:</p><pre><code class="language-plain">constructor() {\n  super();\n  this.config = {\n    header: true,            // ✓ Activa el header\n    fixedHeader: true,       // ✓ Header se mantiene fijo\n    loader: true,            // ✓ Muestra loader durante cargas\n    notify: false,           \n    notifyTop: false,        \n    notifyFeature: false,    \n    smartAssistant: false,   \n    faqs: true,             // ✓ Habilita sección de FAQs\n  };\n}</code></pre><p><strong>Importante:</strong> Solo activa las funcionalidades que tu componente realmente necesite. Mantener opciones innecesarias en <code>true</code> puede afectar el rendimiento y agregar dependencias no utilizadas.</p><p><strong>Caso 2: BbvaComponentConfigurationMixin</strong></p><p>Se utiliza para componentes básicos que solo requieren capacidades de configuración sin funcionalidades adicionales de widget.</p><pre><code class="language-plain">export class BbvaListSimple extends BbvaComponentConfigurationMixin(\n  LitElement,\n) {\n  // Implementación del componente\n}</code></pre><p><strong>Características:</strong></p><ol><li data-list="bullet">Proporciona únicamente gestión de configuración</li><li data-list="bullet">No requiere <code>super.render()</code></li><li data-list="bullet">No requiere objeto <code>config</code> en el constructor</li><li data-list="bullet">Utiliza <code>scopedElementsFromClasses()</code> directamente</li></ol><p><strong>Caso 3: BbvaCustomMixin</strong></p><p>Se utiliza para componentes que requieren funcionalidades personalizadas específicas que no están cubiertas por los mixins estándar.</p><pre><code class="language-plain">export class BbvaListSimple extends BbvaCustomMixin(\n  LitElement,\n) {\n  // Implementación del componente\n}</code></pre><p><strong>Características:</strong></p><ol><li data-list="bullet">Proporciona funcionalidades específicas según el mixin utilizado</li><li data-list="bullet">La implementación varía según el mixin custom aplicado</li></ol><p>Métodos Estáticos Estándar</p><p>Los siguientes métodos estáticos <strong>NO requieren comentarios JSDoc</strong> por ser parte de la estructura estándar de LitElement:</p><p><strong>Identificador del Componente</strong></p><pre><code class="language-plain">static get is() {\n  return \'bbva-feature-about-pe\';\n}</code></pre><p><strong>Registro de Scoped Elements</strong></p><p>Define los elementos hijos que el componente utilizará internamente. La implementación varía según el tipo de mixin utilizado:</p><p><strong>Con BbvaWidgetConfigurationMixin + BbvaWidgetDefaultsMixin:</strong></p><pre><code class="language-plain">static get scopedElements() {\n  return BbvaFeatureQrPaymentP2pPe.scopedElementsFromClasses([\n    ...BbvaFeatureQrPaymentP2pPe.configurationScopedElements(),\n    BbvaFeatureQrPaymentP2pPePageSuccess,\n    BbvaFeatureQrPaymentP2pPePageTransfer,\n    BbvaFeatureQrPaymentP2pPePageError,\n    BbvaFeatureQrPaymentP2pPePageVoucher,\n    BbvaFeatureQrPaymentP2pPePageShare,\n    BbvaFeatureQrPaymentP2pPeDm,\n    BbvaHelpModal,\n    BbvaListBullet,\n  ]);\n}</code></pre><p><strong>Nota:</strong> Se utiliza el spread operator <code>...configurationScopedElements()</code> para incluir elementos de configuración adicionales.</p><p>Con BbvaComponentConfigurationMixin:</p><pre><code class="language-plain">static get scopedElements() {\n  return BbvaStatusPanel.scopedElementsFromClasses([\n    BbvaTypeDate,\n    BbvaTypeText,\n    BbvaTypeAmount,\n    BbvaClipMicroillustration,\n  ]);\n}</code></pre><p><strong>Nota:</strong> No requiere elementos de configuración adicionales, solo los componentes hijos directos.</p><p>Buenas Prácticas</p><ol><li data-list="ordered"><strong>Selección del Mixin</strong>: Utiliza el mixin más específico para tu caso de uso</li><li data-list="ordered"><strong>Orden de Aplicación</strong>: Cuando uses múltiples mixins, aplícalos de más específico a más genérico</li><li data-list="ordered"><strong>Super Render</strong>: Recuerda incluir <code>${super.render()}</code> solo cuando uses <code>BbvaWidgetDefaultsMixin</code></li><li data-list="ordered"><strong>Configuración Consciente</strong>: En <code>BbvaWidgetConfigurationMixin</code>, activa solo las funcionalidades necesarias en el objeto <code>config</code></li><li data-list="ordered"><strong>Scoped Elements</strong>: Declara todos los elementos hijos utilizados en el template del componente</li></ol>',
    createdAt: '2025-10-26T05:22:41.338Z',
  },
  {
    id: 'mock-demo-feature-1761460301182',
    title: 'MOCK DEMO FEATURE',
    description: 'Este video muestra como realizar lo mock para los servicios que se consume en los feature de lit-element.',
    icon: 'heart-outline',
    linkIcon: 'arrow-forward-outline',
    category: 'Video',
    content:
      "<p>Este video muestra como realizar lo mock para los servicios que se consume en los feature de lit-element.</p><pre><code class=\"language-plain\">import '@bbva-web-components/bbva-core-scoped-custom-element-registry';\nimport '@bbva-web-components/bbva-dev-demo-theme';\nimport './css/demo.css.js';\nimport '../bbva-feature-qr-payment-p2p-pe.js';\nimport { BbvaLocalPeerToPeerMembershipsQuickResponsesApiDm } from '@glomo-web-components/bbva-local-peer-to-peer-api-dm';\nimport sinon from 'sinon';\nimport { getMockUserData } from './mock/index.js';\n\nconst COMPONENT_NAME = 'bbva-feature-qr-payment-p2p-pe';\nconst EVENT_MEMBERSHIP_QUICK_RESPONSES_FETCH =\n  'get-membership-quick-responses-success';\n\nfunction setupMembershipQuickResponsesStub() {\n  const apiLocalPeerToPeerDm =\n    BbvaLocalPeerToPeerMembershipsQuickResponsesApiDm.prototype;\n\n  if (apiLocalPeerToPeerDm.getMembershipQuickResponses?.restore) {\n    apiLocalPeerToPeerDm.getMembershipQuickResponses.restore();\n  }\n\n  sinon\n    .stub(apiLocalPeerToPeerDm, 'getMembershipQuickResponses')\n    .callsFake(function () {\n      setTimeout(() =&gt; {\n        this.dispatchEvent(\n          new CustomEvent(EVENT_MEMBERSHIP_QUICK_RESPONSES_FETCH, {\n            bubbles: true,\n            composed: true,\n            detail: {\n              links: [\n                {\n                  href: 'https://storage.googleapis.com/download',\n                },\n              ],\n            },\n          }),\n        );\n      }, 1000);\n    });\n}\n\nfunction initPropertyDefaults(component) {\n  const MIN_LIMIT = 1;\n  const MAX_LIMIT = 500;\n  component.host = 'https://cal-glomo.bbva.pe/SRVS_A02';\n  component.peerToPeerApiVersion = '0';\n  component.peerToPeerQuickApiVersion = '0';\n  component.cryptoApiVersion = '0';\n  component.customerId = '98715900';\n  component.init();\n}\n\nfunction initDemo() {\n  try {\n    const component = document.querySelector(COMPONENT_NAME);\n    initPropertyDefaults(component);\n    setupMembershipQuickResponsesStub();\n    return component;\n  } catch (error) {\n    console.error('Error al inicializar el demo:', error);\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', initDemo);\n</code></pre><iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://drive.google.com/file/d/1bFnPgHj0bvOxGWuUO7BLW2CvSQGmoqpy/preview\" style=\"width:100%;height:500px;display:block;\"></iframe>",
    createdAt: '2025-10-26T06:31:41.182Z',
  },
  {
    id: 'integraci-n-de-feature-a-glomo-1761466466590',
    title: 'INTEGRACIÓN DE FEATURE A GLOMO',
    description: 'Este video muestra la integración de un feature en el aplicativo Glomo',
    icon: 'calendar-outline',
    linkIcon: 'arrow-forward-outline',
    category: 'Video',
    content: '<p>Este video muestra la integración de un feature en el aplicativo Glomo</p><iframe class="ql-video" frameborder="0" allowfullscreen="true" src="https://drive.google.com/file/d/19Y_wQJuQcbc1sYOruCpmfrLsVT11B17p/preview" style="width:100%;height:500px;display:block;"></iframe>',
    createdAt: '2025-10-26T08:14:26.590Z',
  },
  {
    id: 'decision-token-en-feature-1761468261227',
    title: 'DECISION TOKEN EN FEATURE',
    description: 'En este video se mostrara el cambio al usara colores hexadecimales por tokens',
    icon: 'location-outline',
    linkIcon: 'arrow-forward-outline',
    category: 'Video',
    content:
      "<p>En este video se mostrara el cambio al usara colores hexadecimales por tokens</p><pre><code class=\"language-plain\">./bbva-feature-qr-payment-p2p-pe.scss\n\n@use 'node_modules/@bbva-web-components/bbva-foundations-sass/main' as *;\n\n:host {\n  display: block;\n  box-sizing: border-box;\n  --bg-background-panel: #{bbvaDecisionToken(\n      'sphericaColorPrimaryBgAlternativeDefault',\n      'decisions'\n    )};\n}\n\n.details-panel {\n  display: flex;\n  flex-direction: column;\n  gap: rem(12px);\n  border-radius: rem(16px);\n  padding: rem(16px);\n  background: var(--bg-background-panel);\n  // background: bbvaDecisionToken(\n  //  'sphericaColorPrimarySurfaceBasePressed',\n  //  decisions\n  // );\n}\n\n./bbva-feature-qr-payment-p2p-pe.css.js\n\nimport { css } from 'lit';\nimport decisions from '@bbva-experience/tokens-spherica';\nimport { bbvaDecisionToken } from '@bbva-web-components/bbva-foundations-design-tokens-utils';</code></pre><iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://drive.google.com/file/d/1JhYc5fuyedsGkcW3ppkl14h0MtF9LqOG/preview\" style=\"width:100%;height:500px;display:block;\"></iframe>",
    createdAt: '2025-10-26T08:44:21.227Z',
  },
  {
    id: 'busqueda-de-bgadp-1761470781030',
    title: 'BUSQUEDA DE BGADP',
    description: 'En este video se muestra como buscar desde el api pasando por la busquedad del bgadp y terminando con los Data Manager.',
    icon: 'time-outline',
    linkIcon: 'arrow-forward-outline',
    category: 'Video',
    content: '<p>En este video se muestra como buscar desde el api pasando por la busquedad del bgadp y terminando con los Data Manager.</p><iframe class="ql-video" frameborder="0" allowfullscreen="true" src="https://drive.google.com/file/d/1yTFZauPNADSKIlqX537i6JnmCXcxnDT7/preview" style="width:100%;height:500px;display:block;"></iframe>',
    createdAt: '2025-10-26T09:26:21.030Z',
  },
];
